import{useRef as e,useState as t,useEffect as s,useSyncExternalStore as n}from"react";function r(e){const{state:t,actions:s}=e;let n=Object.assign({},t);const r=new Map,c=[],o=e=>{var t;"*"!==e?(e.forEach((e=>{var t;return null===(t=r.get(e))||void 0===t?void 0:t.forEach((e=>e()))})),null===(t=r.get("*"))||void 0===t||t.forEach((e=>e()))):r.forEach((e=>e.forEach((e=>e()))))},u=e=>{const t=Object.assign({},n),s="function"==typeof e?e(t):e;let r=Object.assign(Object.assign({},n),s);c.forEach((e=>{const s=e(t,r);void 0!==s&&(r=s)}));const u=[];for(const e in r)n[e]!==r[e]&&u.push(e);u.length&&(n=r,o(u))};return{state:{getNexus:()=>n,setNexus:u,nexusReset:()=>{n=Object.assign({},t),o("*")},nexusSubscribe:(e,t)=>{const s=Array.isArray(e)?e:[e];return s.forEach((e=>{r.has(e)||r.set(e,new Set),r.get(e).add(t)})),()=>{s.forEach((e=>{var s;return null===(s=r.get(e))||void 0===s?void 0:s.delete(t)}))}},nexusGate:e=>{c.push(e)}},actions:s?s(u):{}}}function c(c){const{state:o,actions:u}=r(c),a=u;return{state:Object.assign(Object.assign({},o),{useNexus:function(e){return n((t=>o.nexusSubscribe(e?[e]:"*",t)),(()=>e?o.getNexus()[e]:o.getNexus()))},useNexusSelector:function(n,r){const c=e(n(o.getNexus())),[u,a]=t((()=>n(o.getNexus())));return s((()=>{const e=()=>{const e=n(o.getNexus());e!==c.current&&(c.current=e,a(e))},t=o.nexusSubscribe(r,e);return e(),t}),[n]),u}}),actions:a}}export{c as createReactStore,r as createStore};
