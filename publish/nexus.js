"use strict";var e=require("react/jsx-runtime"),t=require("react");function r(e,r){const n=function(e){let r=e;const n=t.useRef(new Set);return{get:t.useCallback((()=>r),[]),set:t.useCallback((e=>{r=Object.assign(Object.assign({},r),e),n.current.forEach((e=>e()))}),[]),subscribe:t.useCallback((e=>(n.current.add(e),()=>n.current.delete(e))),[])}}(e);return{get:function(r){return r in n.get()||console.error(`State "${String(r)}" in useNexus not found ðŸ‘º`),t.useSyncExternalStore(n.subscribe,(()=>{var t;return null!==(t=n.get()[r])&&void 0!==t?t:e[r]}),(()=>e[r]))},dispatch:function(e){const t=n.get(),s=r(t,e);t!==s&&n.set(s)},getAll:function(){return t.useSyncExternalStore(n.subscribe,n.get,(()=>e))},selector:function(r){const s=n.get();return void 0===r(s)&&console.error("State in useNexusSelect not found ðŸ‘º"),t.useSyncExternalStore(n.subscribe,(()=>r(n.get())),(()=>r(e)))},subscribe:n.subscribe}}const n=t.createContext(null);let s=null;function o(){const e=t.useContext(n);if(!e)throw new Error("NexusProvider not found ðŸ‘º");return e}exports.NexusProvider=({initialStates:t,actions:o,children:i})=>{const u=function(e){return function t(r,n){var s;if(Array.isArray(n.payload))return n.payload.reduce(((e,r)=>t(e,r)),r);const{stateKey:o,payload:i,type:u}=n;if(o){const e=r[o],t="function"==typeof i?i(e):i;if(t!==e)return Object.assign(Object.assign({},r),{[o]:t})}if(u){const t=e[u];if(null==t?void 0:t.reducer)return null!==(s=t.reducer(r,i))&&void 0!==s?s:r;if(null==t?void 0:t.action)return t.action(i),r}return r}}(o||{}),c=structuredClone(t),a=Object.assign(Object.assign({},r(c,u)),{initialStates:t});return s=a.dispatch,e.jsx(n.Provider,{value:a,children:i})},exports.nexusAction=function(e){if("function"==typeof e)return{reducer:(t,r)=>e(t,r)};if("string"==typeof e){const t=e;return{reducer:(r,n)=>e in r?Object.assign(Object.assign({},r),{[t]:n.payload}):(console.error(`State key "${e}" does not exist in StatesT ðŸ‘º`),r)}}throw new Error("Reducer or state key must be provided in Nexus ðŸ‘º")},exports.nexusDispatch=function(e){if(!s)throw new Error("nexusDispatch is not initialized. Make sure NexusProvider is used ðŸ‘º");const t=Array.isArray(e)?e:[e];s({payload:t})},exports.nexusUpdate=function(e){if(!s)throw new Error("nexusDispatch is not initialized. Make sure NexusProvider is used ðŸ‘º");if("_NEXUS_"in e){const t=e._NEXUS_;s({payload:Object.keys(t).map((e=>({stateKey:e,payload:t[e]})))})}else{const t=Object.entries(e).map((([e,t])=>({stateKey:e,payload:t})));s({payload:t})}},exports.useNexus=function(e){const t=o();return e?t.get(e):t.getAll()},exports.useNexusSelect=e=>e(o().getAll());
