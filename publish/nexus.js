"use strict";var e=require("react/jsx-runtime"),t=require("react");function r(e,r){const n=function(e){let r=e;const n=t.useRef(new Set),s=t.useRef(null);return{get:t.useCallback((()=>r),[]),set:t.useCallback((e=>{r=Object.assign(Object.assign({},r),e),s.current&&clearTimeout(s.current),s.current=setTimeout((()=>{n.current.forEach((e=>e())),s.current=null}),16)}),[]),subscribe:t.useCallback((e=>(n.current.add(e),()=>n.current.delete(e))),[])}}(e);return{get:function(r){return r in e||console.error(`State "${String(r)}" in useNexus not found ðŸ‘º`),t.useSyncExternalStore(n.subscribe,(()=>{var t;return null!==(t=n.get()[r])&&void 0!==t?t:e[r]}),(()=>e[r]))},getAll:function(){return t.useSyncExternalStore(n.subscribe,n.get,(()=>e))},selector:function(r){return t.useSyncExternalStore(n.subscribe,(()=>r(n.get())),(()=>r(e)))},dispatch:function(e){const t=n.get(),s=r(t,e);t!==s&&n.set(s)},subscribe:n.subscribe}}const n=t.createContext(null);let s=null;function u(){const e=t.useContext(n);if(!e)throw new Error("NexusProvider not found ðŸ‘º");return e}exports.NexusProvider=({initialStates:u,initialFuncs:i,children:o})=>{const c=t.useMemo((()=>JSON.parse(JSON.stringify(u))),[u]),a=t.useMemo((()=>function(e){return function t(r,n,s){if(Array.isArray(n.payload)&&!s)return n.payload.reduce(((e,r)=>t(e,r,!0)),r);const{stateKey:u,payload:i,type:o}=n;if(u){const e=r[u],t="function"==typeof i?i(e):i;if(t!=e)return Object.assign(Object.assign({},r),{[u]:t})}if(o){const t=e[o];(null==t?void 0:t.fData)&&t.fData(i)}return r}}(i||{})),[i]),l=Object.assign(Object.assign({},r(c,a)),{initialStates:u});return s=l.dispatch,e.jsx(n.Provider,{value:l,children:o})},exports.nexusTrigger=function(e){if(!s)throw new Error("nexusTrigger is not initialized. Make sure NexusProvider is used ðŸ‘º");s({payload:Array.isArray(e)?e:[e]})},exports.nexusUpdate=function(e){if(!s)throw new Error("nexusTrigger is not initialized. Make sure NexusProvider is used ðŸ‘º");if("_NEXUS_"in e){const t=e._NEXUS_;s({payload:Object.keys(t).map((e=>({stateKey:e,payload:t[e]})))})}else{const t=Object.entries(e).map((([e,t])=>({stateKey:e,payload:t})));s({payload:t})}},exports.useNexus=function(e){const t=u();return e?t.get(e):t.getAll()},exports.useNexusSelect=e=>u().selector(e);
